package io.akhilennu.chatbot.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class FollowupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowupAllPropertiesEquals(Followup expected, Followup actual) {
        assertFollowupAutoGeneratedPropertiesEquals(expected, actual);
        assertFollowupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowupAllUpdatablePropertiesEquals(Followup expected, Followup actual) {
        assertFollowupUpdatableFieldsEquals(expected, actual);
        assertFollowupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowupAutoGeneratedPropertiesEquals(Followup expected, Followup actual) {
        assertThat(actual)
            .as("Verify Followup auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowupUpdatableFieldsEquals(Followup expected, Followup actual) {
        assertThat(actual)
            .as("Verify Followup relevant properties")
            .satisfies(a -> assertThat(a.getQuestion()).as("check question").isEqualTo(expected.getQuestion()))
            .satisfies(a -> assertThat(a.getTargetEntity()).as("check targetEntity").isEqualTo(expected.getTargetEntity()))
            .satisfies(a -> assertThat(a.getOrder()).as("check order").isEqualTo(expected.getOrder()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFollowupUpdatableRelationshipsEquals(Followup expected, Followup actual) {
        assertThat(actual)
            .as("Verify Followup relationships")
            .satisfies(a -> assertThat(a.getIntent()).as("check intent").isEqualTo(expected.getIntent()));
    }
}
